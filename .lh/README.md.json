{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1715688683663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715699034076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,16 @@\n > Here is [the working example](https://mate-academy.github.io/react_people-table-basics/)\n \n Implement the `App` with 2 pages and ability to select a person in the table.\n \n-1. Create the `HomePage` available at `/` with just a title `Home Page`\n++ Create the `HomePage` available at `/` with just a title `Home Page`\n 1. Create the `PeoplePage` available at `/people` with a title `People Page`\n 1. Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n 1. Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n 1. Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n 1. Use `HashRouter` to be able to share a link to any page on Github pages;\n- Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n++ Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n 1. Pass `people` to `PeopleTable` component and render as a table (see the given markup);\n 1. Make each name in the table a link a to `/people/:slug` (including mother and father)\n     - create the `<PersonLink person={person} />` and use it for all existing people;\n     - add the `has-text-danger` class for women names;\n"
                },
                {
                    "date": 1715699041451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n Implement the `App` with 2 pages and ability to select a person in the table.\n \n + Create the `HomePage` available at `/` with just a title `Home Page`\n-1. Create the `PeoplePage` available at `/people` with a title `People Page`\n+ Create the `PeoplePage` available at `/people` with a title `People Page`\n 1. Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n 1. Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n 1. Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n"
                },
                {
                    "date": 1715699048589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n \n Implement the `App` with 2 pages and ability to select a person in the table.\n \n + Create the `HomePage` available at `/` with just a title `Home Page`\n- Create the `PeoplePage` available at `/people` with a title `People Page`\n-1. Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n++ Create the `PeoplePage` available at `/people` with a title `People Page`\n+ Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n 1. Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n 1. Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n 1. Use `HashRouter` to be able to share a link to any page on Github pages;\n"
                },
                {
                    "date": 1715699058139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,11 @@\n Implement the `App` with 2 pages and ability to select a person in the table.\n \n + Create the `HomePage` available at `/` with just a title `Home Page`\n + Create the `PeoplePage` available at `/people` with a title `People Page`\n- Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n++ Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n-1. Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n+ Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n 1. Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n 1. Use `HashRouter` to be able to share a link to any page on Github pages;\n + Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n 1. Pass `people` to `PeopleTable` component and render as a table (see the given markup);\n"
                },
                {
                    "date": 1715699066229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n + Create the `HomePage` available at `/` with just a title `Home Page`\n + Create the `PeoplePage` available at `/people` with a title `People Page`\n + Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n- Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n-1. Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n++ Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n+ Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n 1. Use `HashRouter` to be able to share a link to any page on Github pages;\n + Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n 1. Pass `people` to `PeopleTable` component and render as a table (see the given markup);\n 1. Make each name in the table a link a to `/people/:slug` (including mother and father)\n"
                },
                {
                    "date": 1715699096742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n + Create the `PeoplePage` available at `/people` with a title `People Page`\n + Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n + Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n- Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n-1. Use `HashRouter` to be able to share a link to any page on Github pages;\n++ Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n+ Use `HashRouter` to be able to share a link to any page on Github pages;\n + Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n 1. Pass `people` to `PeopleTable` component and render as a table (see the given markup);\n 1. Make each name in the table a link a to `/people/:slug` (including mother and father)\n     - create the `<PersonLink person={person} />` and use it for all existing people;\n"
                },
                {
                    "date": 1715756416294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n + Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n     - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n + Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n + Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n- Use `HashRouter` to be able to share a link to any page on Github pages;\n++ Use `HashRouter` to be able to share a link to any page on Github pages;\n + Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n 1. Pass `people` to `PeopleTable` component and render as a table (see the given markup);\n 1. Make each name in the table a link a to `/people/:slug` (including mother and father)\n     - create the `<PersonLink person={person} />` and use it for all existing people;\n@@ -24,5 +24,5 @@\n - Install Prettier Extention and use this [VSCode settings](https://mate-academy.github.io/fe-program/tools/vscode/settings.json) to enable format on save.\n - Implement a solution following the [React task guideline](https://github.com/mate-academy/react_task-guideline#react-tasks-guideline).\n - Use the [React TypeScript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript).\n - Open one more terminal and run tests with `npm test` to ensure your solution is correct.\n-- Replace `<your_account>` with your Github username in the [DEMO LINK](https://<your_account>.github.io/react_people-table-basics/) and add it to the PR description.\n+- Replace `<your_account>` with your Github username in the [DEMO LINK](https://marinatea.github.io/react_people-table-basics/) and add it to the PR description.\n"
                }
            ],
            "date": 1715688683663,
            "name": "Commit-0",
            "content": "# React People Table\n\n> Here is [the working example](https://mate-academy.github.io/react_people-table-basics/)\n\nImplement the `App` with 2 pages and ability to select a person in the table.\n\n1. Create the `HomePage` available at `/` with just a title `Home Page`\n1. Create the `PeoplePage` available at `/people` with a title `People Page`\n1. Use [Navigate](https://reactrouter.com/docs/en/v6/components/navigate) component to redirect from `/home` to `/`;\n    - add `replace` attribute not to save `/home` URL in the [browser history](https://reactrouter.com/en/main/start/tutorial#managing-the-history-stack) and avoid navigation loop when you press browser `Go back` button.\n1. Implement `NotFoundPage` with a title `Page not found` that is shown for all the other URLs;\n1. Add the `Navbar` with 2 links `Home` and `People`. Active one should have the `has-background-grey-lighter` class;\n1. Use `HashRouter` to be able to share a link to any page on Github pages;\n Fetch `people` from [the API](https://mate-academy.github.io/react_people-table/api/people.json) when `PeoplePage` is opened;\n1. Pass `people` to `PeopleTable` component and render as a table (see the given markup);\n1. Make each name in the table a link a to `/people/:slug` (including mother and father)\n    - create the `<PersonLink person={person} />` and use it for all existing people;\n    - add the `has-text-danger` class for women names;\n    - if there is no person with a given name among the people just keep the name as a text (not a link);\n    - if the motherName or fatherName is empty put `-` to the table\n1. Highlight the row of the selected person with the `has-background-warning` class;\n\n## Instructions\n- Install Prettier Extention and use this [VSCode settings](https://mate-academy.github.io/fe-program/tools/vscode/settings.json) to enable format on save.\n- Implement a solution following the [React task guideline](https://github.com/mate-academy/react_task-guideline#react-tasks-guideline).\n- Use the [React TypeScript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript).\n- Open one more terminal and run tests with `npm test` to ensure your solution is correct.\n- Replace `<your_account>` with your Github username in the [DEMO LINK](https://<your_account>.github.io/react_people-table-basics/) and add it to the PR description.\n"
        }
    ]
}